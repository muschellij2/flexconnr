% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_flexconn.R
\name{predict_flexconn}
\alias{predict_flexconn}
\title{Predict from FLEXCONN model}
\usage{
predict_flexconn(t1, flair, outdir = NULL, gpu = "cpu",
  num_atlases = c("21", "61"), verbose = TRUE)
}
\arguments{
\item{t1}{T1-weighted image to predict from: skullstripped, bias-corrected).
Since the training is 2D, make sure
the test image is properly oriented, i.e. the in-plane has the highest native
resolution. E.g. the training images are axial because their
native resolution is 1x1x4mm^3 in axial RAI orientation.}

\item{flair}{FLAIR image to predict from,
must be registered to T1 and have same orientation as T1}

\item{outdir}{Output directory for predictions}

\item{gpu}{Either an integer for the GPU.
Use "cpu" to use CPU.}

\item{num_atlases}{Specifies which model to use.
Determined by the number of atlases in the FLEXCONN model.}

\item{verbose}{Print diagnostic messages}
}
\value{
A vector of filenames
}
\description{
Predict from FLEXCONN model
}
\examples{
# predict_flexconn(python_cmd = "python3)
library(reticulate)
\dontrun{
use_python("python3")

flair = system.file("extdata", "FLAIR.nii.gz", package = "flexconnr")
t1 = system.file("extdata", "T1.nii.gz", package = "flexconnr")
pp = predict_flexconn(t1 = t1, flair = flair)
# result = RNifti::readNifti(pp[2])
}

}
